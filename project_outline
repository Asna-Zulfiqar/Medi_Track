### **Hospital Management System Project Outline**

#### **Apps Required**
1. **Users**: Manage user authentication, roles, permissions, and profiles.
2. **Patients**: Handle patient registration, dashboards, and medical history.
3. **Appointments**: Manage appointment booking, history, and reminders.
4. **Doctors**: Manage doctor profiles, availability, and performance.
5. **Staff**: Handle staff profiles, shifts, and leave management.
6. **MedicalRecords**: Store and manage electronic health records, lab results, and prescriptions.
7. **Billing**: Handle patient billing, payments, and insurance integration.
8. **Pharmacy**: Manage inventory of medicines and prescriptions.
9. **Wards**: Track bed and ward allocations.
10. **Notifications**: Manage email/SMS alerts for appointments, bills, and critical updates.
11. **Emergency**: Track emergency cases, critical care management, and ambulance services.
12. **Feedback**: Collect and manage patient feedback on staff and services.

---

#### **App Models and Fields**

### **1. Users App**
- **Models**
  - `User` (Custom User Model)
    - `email` (EmailField, unique)
    - `name` (CharField)
    - `password` (CharField)
    - `role` (ChoiceField: `admin`, `doctor`, `staff`, `patient`)
    - `is_active` (BooleanField)
    - `is_staff` (BooleanField)
  - `Role`
    - `name` (CharField)
    - `permissions` (ManyToManyField to Permission)
  - `Permission`
    - `name` (CharField)
    - `description` (TextField)

---

### **2. Patients App**
- **Models**
  - `Patient`
    - `user` (OneToOneField to User)
    - `age` (IntegerField)
    - `gender` (ChoiceField: `male`, `female`, `other`)
    - `contact` (CharField)
    - `emergency_contact` (CharField)
    - `address` (TextField)
  - `MedicalHistory`
    - `patient` (ForeignKey to Patient)
    - `condition` (CharField)
    - `details` (TextField)
    - `date_recorded` (DateField)

---

### **3. Appointments App**
- **Models**
  - `Appointment`
    - `patient` (ForeignKey to Patient)
    - `doctor` (ForeignKey to Doctor)
    - `date` (DateTimeField)
    - `status` (ChoiceField: `booked`, `completed`, `cancelled`)
  - `DoctorAvailability`
    - `doctor` (OneToOneField to Doctor)
    - `available_from` (TimeField)
    - `available_to` (TimeField)

---

### **4. Doctors App**
- **Models**
  - `Doctor`
    - `user` (OneToOneField to User)
    - `specialization` (CharField)
    - `contact` (CharField)
    - `profile_image` (ImageField)
    - `experience` (IntegerField, in years)

---

### **5. Staff App**
- **Models**
  - `Staff`
    - `user` (OneToOneField to User)
    - `designation` (CharField)
    - `department` (CharField)
  - `Shift`
    - `staff` (ForeignKey to Staff)
    - `start_time` (TimeField)
    - `end_time` (TimeField)
  - `Leave`
    - `staff` (ForeignKey to Staff)
    - `start_date` (DateField)
    - `end_date` (DateField)
    - `reason` (TextField)
    - `status` (ChoiceField: `pending`, `approved`, `rejected`)

---

### **6. MedicalRecords App**
- **Models**
  - `MedicalRecord`
    - `patient` (ForeignKey to Patient)
    - `doctor` (ForeignKey to Doctor)
    - `diagnosis` (TextField)
    - `treatment_plan` (TextField)
    - `date_created` (DateField)
  - `LabTest`
    - `patient` (ForeignKey to Patient)
    - `test_name` (CharField)
    - `result` (TextField)
    - `date_conducted` (DateField)
  - `Prescription`
    - `patient` (ForeignKey to Patient)
    - `doctor` (ForeignKey to Doctor)
    - `medicine_name` (CharField)
    - `dosage` (CharField)
    - `date_issued` (DateField)

---

### **7. Billing App**
- **Models**
  - `Bill`
    - `patient` (ForeignKey to Patient)
    - `amount` (DecimalField)
    - `details` (TextField)
    - `date_issued` (DateField)
    - `status` (ChoiceField: `paid`, `unpaid`)
  - `Payment`
    - `bill` (ForeignKey to Bill)
    - `amount_paid` (DecimalField)
    - `payment_method` (ChoiceField: `cash`, `card`, `insurance`)
    - `date_paid` (DateField)

---

### **8. Pharmacy App**
- **Models**
  - `Medicine`
    - `name` (CharField)
    - `stock` (IntegerField)
    - `expiry_date` (DateField)
    - `price` (DecimalField)
  - `Dispense`
    - `patient` (ForeignKey to Patient)
    - `medicine` (ForeignKey to Medicine)
    - `quantity` (IntegerField)
    - `date_dispensed` (DateField)

---

### **9. Wards App**
- **Models**
  - `Bed`
    - `ward` (CharField)
    - `bed_number` (IntegerField)
    - `status` (ChoiceField: `occupied`, `available`, `maintenance`)
  - `BedAllocation`
    - `patient` (ForeignKey to Patient)
    - `bed` (ForeignKey to Bed)
    - `date_assigned` (DateField)
    - `date_released` (DateField)

---

### **10. Notifications App**
- **Models**
  - `Notification`
    - `user` (ForeignKey to User)
    - `message` (TextField)
    - `date_sent` (DateTimeField)
    - `type` (ChoiceField: `email`, `SMS`, `push`)

---

### **11. Emergency App**
- **Models**
  - `EmergencyCase`
    - `patient` (ForeignKey to Patient)
    - `description` (TextField)
    - `priority` (ChoiceField: `low`, `medium`, `high`)
    - `date_reported` (DateTimeField)
  - `Ambulance`
    - `license_plate` (CharField)
    - `driver_name` (CharField)
    - `status` (ChoiceField: `available`, `occupied`)

---

### **12. Feedback App**
- **Models**
  - `Feedback`
    - `patient` (ForeignKey to Patient)
    - `service` (ChoiceField: `doctor`, `staff`, `facility`)
    - `rating` (IntegerField, 1-5)
    - `comments` (TextField)

--- 

This detailed structure provides a comprehensive roadmap for developing a robust Hospital Management System using Django. Let me know if you'd like further assistance!
